@inherits LayoutComponentBase
@layout MainLayout

@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<HxCard>
    <BodyTemplate>
        @if (_currentPost is not null)
        {
            <div class="d-md-flex flex-row justify-content-between align-items-center">
                <div></div>
                <h1 class="text-center m-0 bg-primary text-white p-2">@_currentPost.Title</h1>
                <div class="me-1 mt-2 mt-md-0">
                    @if (_currentPost.Category != null)
                    {

                        <HxBadge Color="ThemeColor.Info" Type="BadgeType.RoundedPill">
                            <a class="text-white text-decoration-none fs-6" href="@($"?page=1&pageSize={Constants.PageSize}&categories={_currentPost.Category.Name}")">
                                @_currentPost.Category.Name
                            </a>
                        </HxBadge>
                    }
                </div>
            </div>

            <div class="mt-4">
                @Body
            </div>
        }
    </BodyTemplate>
</HxCard>

<HxCard CssClass="mt-2">
    <HeaderTemplate>
        <p class="h1 lead">Bình luận</p>
    </HeaderTemplate>
    <BodyTemplate>
        @if (_isLoading)
        {
            <div class="text-center p-3">
                <HxSpinner Size="SpinnerSize.Regular" />
            </div>
        }
        <div id="disqus_thread"></div>
    </BodyTemplate>
</HxCard>

<HxCard CssClass="mt-2">
    <HeaderTemplate>
        <p class="h1 lead">Bài viết tương tự</p>
    </HeaderTemplate>
    <BodyTemplate>
        <RelatedPosts />
    </BodyTemplate>
</HxCard>

@code {
    private IJSObjectReference? _module;

    private bool _isLoading = false;

    private PostDto? _currentPost = null;

    protected override void OnInitialized()
    {
        var currentUrl = new Uri(NavigationManager.Uri).AbsolutePath;
        _currentPost = AppDataManager.GetPostByRoute(currentUrl);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isLoading = true;
            _module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "/Layout/BlogPostLayout.razor.js");
            //await _module.InvokeVoidAsync("addDisqusComments");

            _isLoading = false;
            StateHasChanged();
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (_module is not null)
        {
            await _module.DisposeAsync();
        }
    }
}
